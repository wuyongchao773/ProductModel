<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.product.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.product.model.UserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="delete_status" jdbcType="TINYINT" property="deleteStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, role_id, delete_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.product.model.UserRole">
    insert into user_role (id, user_id, role_id, 
      delete_status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{deleteStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.product.model.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.product.model.UserRole">
    update user_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.product.model.UserRole">
    update user_role
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      delete_status = #{deleteStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryUserRoleByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List"></include>
  	from user_role
  	where user_id = #{userId,jdbcType=VARCHAR}
  	and delete_status = 0
  </select>
  
  <update id="batchDeleteUsers" parameterType="java.util.List">
  		update user_role set delete_status = 1 where user_id in
  		<trim>
	  		<foreach collection="list" open="(" close=")" separator="," item="userId">
	  			'${userId}'
	  		</foreach>
  		</trim>
  </update>
  
  <insert id="batchInsetUserRole" parameterType="com.product.model.UserRole">
   		insert into user_role(user_id,role_id,delete_status) values
  		<foreach collection="list" separator="," item="userRole">
  			(#{userRole.userId},#{userRole.roleId},#{userRole.deleteStatus})
  		</foreach>
  </insert>
</mapper>