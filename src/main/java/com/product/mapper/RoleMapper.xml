<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.product.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.product.model.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="createBy" jdbcType="VARCHAR" property="createby" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, create_date, createBy
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.product.model.Role">
    insert into role (id, role_name, create_date, 
      createBy)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.product.model.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createby != null">
        createBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null">
        #{createby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.product.model.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null">
        createBy = #{createby,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.product.model.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      createBy = #{createby,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

	<resultMap id="BaseResultMapDto" type="com.product.dto.RoleDto">
    	<id column="id" jdbcType="INTEGER" property="id" />
   		<result column="role_name" jdbcType="VARCHAR" property="roleName" />
    	<result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    	<result column="createBy" jdbcType="VARCHAR" property="createby" />
    	<result column="real_name" jdbcType="VARCHAR" property="realname"/>
  	</resultMap>
  
	<select id="selectRoleAll" resultMap="BaseResultMapDto">
		select r.id,r.role_name,r.create_date,su.realname from role r join sys_user su
		on r.createBy = su.username
	</select>
	
	<delete id="batchDeleteRole">
		delete from role where id in 
		<foreach collection="array" item="item" index="index" open="(" close=")" separator=",">
			${item}
		</foreach>
	</delete>
</mapper>